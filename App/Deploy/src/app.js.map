{"version":3,"sources":["../src/app.js"],"names":["require","config","_interopRequireDefault","obj","__esModule","default","app","HOST","process","env","PORT","use","bodyParser","json","urlencoded","extended","express","static","path","join","__dirname","mongoose","connect","DB_HOST","db","connection","on","console","error","bind","user","image","get","req","res","sendFile","next","err","Error","status","listen","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEAA,QAAQ,QAAR,EAAkBC,MAAlB;;AAEA,SAASC,sBAAT,CAAgCC,GAAhC,EAAqC;AACnC,SAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEE,SAASF,GAAX,EAArC;AACD;;AAED,IAAMG,MAAM,wBAAZ;AACA,IAAMC,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAEAJ,IAAIK,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAL,IAAIK,GAAJ,CAAQ,qBAAR;AACAL,IAAIK,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAP,IAAIK,GAAJ,CAAQC,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACAT,IAAIK,GAAJ,CAAQ,6BAAR;AACAL,IAAIK,GAAJ,CAAQ,kCAAR;;AAEAL,IAAIK,GAAJ,CAAQK,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,eAArB,CAAf,CAAR;AACAd,IAAIK,GAAJ,CAAQ,SAAR,EAAmBK,kBAAQC,MAAR,CAAe,QAAf,CAAnB;;AAEAI,mBAASC,OAAT,CAAiBd,QAAQC,GAAR,CAAYc,OAA7B;;AAEA,IAAMC,KAAKH,mBAASI,UAApB;;AAEAD,GAAGE,EAAH,CAAM,OAAN,EAAeC,QAAQC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,2BAA5B,CAAf;;AAEArB,IAAIK,GAAJ,CAAQ,WAAR,EAAqBmB,oBAArB;AACAxB,IAAIK,GAAJ,CAAQ,GAAR,EAAaoB,qBAAb;;AAEAzB,IAAI0B,GAAJ,CAAQ,IAAR,EAAc,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,MAAIC,QAAJ,CAAajB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,0BAArB,CAAb;AACD,CAFD;;AAIAd,IAAIK,GAAJ,CAAQ,UAACsB,GAAD,EAAMC,GAAN,EAAWE,IAAX,EAAoB;AAC1B,MAAMC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAZ;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAH,OAAKC,GAAL;AACD,CAJD;;AAMA/B,IAAIkC,MAAJ,CAAWjC,IAAX,EAAiB;AAAA,SAAMoB,QAAQc,GAAR,6BAAsClC,IAAtC,CAAN;AAAA,CAAjB","file":"app.js","sourcesContent":["import express from \"express\";\nimport path from \"path\";\nimport favicon from \"serve-favicon\";\nimport logger from \"morgan\";\nimport cookieParser from \"cookie-parser\";\nimport bodyParser from \"body-parser\";\nimport fileUpload from \"express-fileupload\";\nimport cors from \"cors\";\nimport uuidV1 from \"uuid/v1\";\nimport mongoose from \"mongoose\";\n\nimport user from \"./routes/userRoutes\";\nimport image from \"./routes/imageRoutes\";\n\nrequire(\"dotenv\").config();\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nconst app = express();\nconst HOST = process.env.PORT || 8080;\n\napp.use(logger(\"dev\"));\napp.use(cors());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(cookieParser());\napp.use(fileUpload());\n\napp.use(express.static(path.join(__dirname, \"/views/client\")));\napp.use(\"/public\", express.static(\"public\"));\n\nmongoose.connect(process.env.DB_HOST);\n\nconst db = mongoose.connection;\n\ndb.on(\"error\", console.error.bind(console, \"MongoDB connection error:\"));\n\napp.use(\"/api/user\", user);\napp.use(\"/\", image);\n\napp.get(\"/*\", (req, res) => {\n  res.sendFile(path.join(__dirname, \"/views/client/index.html\"));\n});\n\napp.use((req, res, next) => {\n  const err = new Error(\"Not Found\");\n  err.status = 404;\n  next(err);\n});\n\napp.listen(HOST, () => console.log(`app start running in : ${HOST}`));\n"]}